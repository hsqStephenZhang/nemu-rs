#![no_std]
#![no_main]
#![allow(unsafe_op_in_unsafe_fn)]

#[macro_use]
extern crate user_lib;

use core::cmp::min;

fn min3(x: i32, y: i32, z: i32) -> i32 {
    min(z, min(x, y))
}

static TEST_DATA: [i32; 4] = [0, 0x7fffffff, -0x80000000, -1];
static ANS: [i32; 64] = [
    0, 0, -2147483648, -1, 0, 0, -2147483648, -1, -2147483648, -2147483648, -2147483648, -2147483648, -1, -1, -2147483648, -1, 
    0, 0, -2147483648, -1, 0, 2147483647, -2147483648, -1, -2147483648, -2147483648, -2147483648, -2147483648, -1, -1, -2147483648, -1, 
    -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, -2147483648, 
    -1, -1, -2147483648, -1, -1, -1, -2147483648, -1, -2147483648, -2147483648, -2147483648, -2147483648, -1, -1, -2147483648, -1
];

#[allow(unsafe_op_in_unsafe_fn)]
#[unsafe(no_mangle)]
pub unsafe fn main() -> i32 {
    let mut ans_idx = 0;
    for &i in TEST_DATA.iter() {
        for &j in TEST_DATA.iter() {
            for &k in TEST_DATA.iter() {
                nemu_assert!(min3(i, j, k) == ANS[ans_idx]);
                ans_idx += 1;
            }
        }
    }
    println!("min3 test passed!");
    0
}
